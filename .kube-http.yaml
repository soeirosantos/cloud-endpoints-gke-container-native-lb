---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: esp-echo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: esp-echo 
  template:
    metadata:
      labels:
        app: esp-echo
    spec:
      containers:
      - name: esp
        image: gcr.io/endpoints-release/endpoints-runtime:1
        args: [
          "--http_port", "8081",
          "--backend", "127.0.0.1:8080",
          "--service", "echo-api.endpoints.YOUR_PROJECT_ID.cloud.goog",
          "--rollout_strategy", "managed",
        ]
        ports:
          - name: esp-http
            containerPort: 8081
          - name: esp-status
            containerPort: 8090
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /endpoints_status
            port: esp-status
            scheme: HTTP
          initialDelaySeconds: 24
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz
            port: esp-http
            scheme: HTTP
          initialDelaySeconds: 24
          periodSeconds: 6
          successThreshold: 1
          timeoutSeconds: 4

      - name: echo
        image: soeirosantos/echo-go:1.1
        imagePullPolicy: Always
        ports:
          - name: echo-http
            containerPort: 8080
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz
            port: echo-http
            scheme: HTTP
          initialDelaySeconds: 8
          periodSeconds: 25
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz
            port: echo-http
            scheme: HTTP
          initialDelaySeconds: 12
          periodSeconds: 12
          successThreshold: 1
          timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: esp-echo
  # default for Services created in GKE clusters 1.17.6-gke.7 and up
  # annotations:
  #   cloud.google.com/neg: '{"ingress": true}'
spec:
  type: ClusterIP
  ports:
    - port: 80
      protocol: TCP
      targetPort: esp-http
      name: svc-http
  selector:
    app: esp-echo
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: esp-echo
  annotations:
    kubernetes.io/ingress.global-static-ip-name: esp-echo
spec:
  defaultBackend:
    service:
      name: esp-echo
      port:
        number: 80
---
